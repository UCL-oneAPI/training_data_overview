warning_code,project_name,file_path,line_in_file,message_id,message
DPCT1065,bpnn,sample_files/bpnn/bpnn_layerforward.h,20,1,"Consider replacing sycl::nd_item::barrier() with
sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better
performance, if there is no access to global memory.
"
DPCT1065,bpnn,sample_files/bpnn/bpnn_layerforward.h,28,1,"Consider replacing sycl::nd_item::barrier() with
sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better
performance, if there is no access to global memory.
"
DPCT1065,bpnn,sample_files/bpnn/bpnn_layerforward.h,36,1,"Consider replacing sycl::nd_item::barrier() with
sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better
performance, if there is no access to global memory.
"
DPCT1065,bpnn,sample_files/bpnn/bpnn_layerforward.h,49,1,"Consider replacing sycl::nd_item::barrier() with
sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better
performance, if there is no access to global memory.
"
DPCT1065,bpnn,sample_files/bpnn/bpnn_layerforward.h,59,1,"Consider replacing sycl::nd_item::barrier() with
sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better
performance, if there is no access to global memory.
"
DPCT1049,bpnn,sample_files/bpnn/bpnn_layerforward.h,82,2,"The workgroup size passed to the SYCL kernel may exceed the limit.
To get the device limit, query info::device::max_work_group_size. Adjust the
workgroup size if needed.
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,34,3,"The generated code assumes that ""&g_odata[0]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_add"" with ""dpct::atomic_fetch_add<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,43,4,"The generated code assumes that ""&g_odata[1]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_sub"" with ""dpct::atomic_fetch_sub<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,52,5,"The generated code assumes that ""&g_odata[2]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_max"" with ""dpct::atomic_fetch_max<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,61,6,"The generated code assumes that ""&g_odata[3]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_min"" with ""dpct::atomic_fetch_min<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,70,7,"The generated code assumes that ""&g_odata[4]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_and"" with ""dpct::atomic_fetch_and<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,80,8,"The generated code assumes that ""&g_odata[5]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_or"" with ""dpct::atomic_fetch_or<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,89,9,"The generated code assumes that ""&g_odata[6]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_xor"" with ""dpct::atomic_fetch_xor<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,34,3,"The generated code assumes that ""&g_odata[0]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_add"" with ""dpct::atomic_fetch_add<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,43,4,"The generated code assumes that ""&g_odata[1]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_sub"" with ""dpct::atomic_fetch_sub<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,52,5,"The generated code assumes that ""&g_odata[2]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_max"" with ""dpct::atomic_fetch_max<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,61,6,"The generated code assumes that ""&g_odata[3]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_min"" with ""dpct::atomic_fetch_min<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,70,7,"The generated code assumes that ""&g_odata[4]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_and"" with ""dpct::atomic_fetch_and<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,80,8,"The generated code assumes that ""&g_odata[5]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_or"" with ""dpct::atomic_fetch_or<int,
sycl::access::address_space::local_space>"".
"
DPCT1039,project1,sample_files/project1/simpleAtomicIntrinsics_kernel.dp.hpp,89,9,"The generated code assumes that ""&g_odata[6]"" points to the
global memory address space. If it points to a local memory address space,
replace ""dpct::atomic_fetch_xor"" with ""dpct::atomic_fetch_xor<int,
sycl::access::address_space::local_space>"".
"
